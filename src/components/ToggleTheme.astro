---

---

<button
  role="switch"
  class="switch__background"
  id="background"
  aria-label="dark mode"
>
  <span id="control" class="switch__control" role="img" id="control"> </span>
</button>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme") ?? "light";
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  const element = document.documentElement;
  const toggle = document.getElementById("background");
  if (theme === "light") {
    element.classList.remove("dark");
    toggle.setAttribute("aria-checked", false);
  } else {
    element.classList.add("dark");
    toggle.setAttribute("aria-checked", "true");
  }

  window.localStorage.setItem("theme", theme);

  const toggleSwitcher = () => {
    element.classList.toggle("dark");

    const isDark = toggle.matches("[aria-checked=true]") ? false : true;
    localStorage.setItem("theme", isDark ? "dark" : "light");
    toggle.setAttribute("aria-checked", isDark);
  };

  const toggle_theme = () => {
    if (!document.startViewTransition) toggleSwitcher();
    document.startViewTransition(toggleSwitcher);
  };

  toggle.addEventListener("click", toggle_theme);
</script>

<style>
  * {
    --container-width: 45px;
    display: flex;
    align-items: center;

    --color-background: white;
    --color-control: white;
    --color-label: black;
    --color-border-background: black;

    --color-background-dark: black;
    --color-control-dark: black;
    --color-label-dark: white;
    --color-border-background-dark: white;

    --background-border: 1px solid var(--color-border);
    --background-border-dark: 1px solid var(--color-border-dark);
  }

  .switch__background {
    --color: var(--color-background);
    --color-border: var(--color-border-background);
    background-color: var(--color);
    display: block;
    width: var(--container-width);
    height: calc(var(--container-width) / 3);
    border: 1px solid var(--color-border);
    border-radius: 30px;
    position: relative;
    cursor: pointer;
    margin: 0 1em;
  }

  .switch__control {
    --color: var(--color-control);
    position: absolute;
    border: none;
    --size: calc(var(--container-width) / 2);
    font-size: 30px;
    top: -12px;
    left: -9px;
    transition: left 300ms;
  }
  .switch__control:after {
    content: "ðŸŒš";
  }

  [aria-checked="true"] .switch__control {
    top: -12px;
    left: var(--size);
  }

  [aria-checked="true"] .switch__control:after {
    content: "ðŸŒž";
  }

  [aria-checked="true"] {
    --color: var(--color-background-dark);
    --color-border: var(--color-border-background-dark);
  }
  .switch__background:focus {
    outline-offset: 8px;
  }

  @media (max-width: 500px) {
    :host {
      flex-direction: column;
    }
    .switch__background {
      height: var(--container-width);
      width: calc(var(--container-width) / 3);
    }
    .switch__control {
      left: -9px;
      transition: top 300ms;
    }
    [aria-checked="true"] .switch__control {
      left: -9px;
      top: var(--size);
    }
  }
</style>
