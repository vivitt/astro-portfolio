---
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import { getCollection, render } from "astro:content";
import Tech from "../../components/Tech.astro";

export async function getStaticPaths() {
  const posts = await getCollection("projects");
  return posts.map((project) => ({
    params: { id: project.id },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content } = await render(project);
---

<Layout title={project.data.title}>
  <main class="project">
    <header class="project__header">
      
      <Image src={project.data.images.cover} alt='' />
      <h1 class="project__header__title">{project?.data?.title}</h1>
      <p class="project__header__description">{
        project.data.description}</p>
    </header>
    <div class="project__content">
      <section class="project__content__section">
        <h2 class="project__content__section__title">Links</h2>
        <div class="project__content__section__content">
          
        </div>
      </section>

      <section class="project__content__section">
        <h2 class="project__content__section__title">Tech stack</h2>
        <div class="project__content__section__content">
          {
            project?.data?.technologies &&
              project?.data?.technologies.map((tech: string) => (
                <Tech tech={tech} />
              ))
          }
        </div>
      </section>

      <div class="tags">
        <h4 class="visually-hidden">This project was created with:</h4>
       
      </div>
    <Content />
  </div>
    <div class="project__link">  
      <a href="/projects" class="project__link--link"><span aria-hidden>&#60;</span>
        <span aria-hidden>&#60;</span> Back to all projects </a>
    </div>
  </main>
</Layout>
<style lang="scss">
  @use "../../styles/mixins";
  .project {
      &__header {
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;

        &__title {
          font-size: 2.2em;
        }

        &__description {
          font-size: 1.2em;
        }

      }

      &__content {
        padding-bottom: 2em;
        border-bottom: 1px solid;
      }

    img {
      max-width: 70%;
      height: auto;
    }

    &__link {
      display: flex;
      padding: 2em 0 0 0;
      display: flex;
      align-items: center;

      --to: 100%;
      font-weight: 900;
    
      &--link {
        font-size: 1em;
        @include mixins.reset-link;
        @include mixins.underline-link;
        background-position: 27px 88%;
       
        span {
          color: var(--accColor);
          opacity: 0;
          font-size: 1em;
          &:first-of-type {
            --order: 2;
          }
          &:last-of-type {
            --order: 1;
          }
        }
      }
      &:hover .project__link--link {
        animation: underline-link 400ms forwards;
        font-weight: bold;
      }

      &:hover .project__link--link > span {
      opacity: 1;
      transition: all 500ms;
      transition-delay: calc(var(--order) * 150ms);
    }
    }
  }
</style>
